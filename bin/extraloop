#! /usr/bin/env ruby
$: << File.realpath(File.dirname(File.dirname(__FILE__))) + "/lib/extraloop"

require 'thor'
require 'thor/group'
require 'redis-storage'

class DataStoreCommand < Thor
  @@sessions = ExtraLoop::Storage::ScrapingSession.all
  @@redis = Ohm.redis

  desc "list", "List harvested datasets"

  def list
    data = @@sessions.map { |session| [ session.id, session.title, session.model && session.model.name, session.model && session.records.size ]}
    headers = %w[id title model records]
    $stdout.puts tabularize(headers, data)
  end

  desc "delete", "Remove one or several items"

  def delete
    #items(arg).each &:delete
  end

  private
  def items(arg)
    start_end = /(\d+)\.\.(\d+)/.match(arg) ? [$1, $2] : [arg, arg]
    Array(Range.new *start_end).map { |sid| @@sessions[sid] }
  end

  def tabularize(headers, data)
    rows = [headers].concat data.map { |row| row.take(headers.size) }

    max_cell_sizes = Range.new(0, headers.size).to_a.map do |coll_index|
      data.map { |row| row[coll_index].to_s.length }.max
    end

    rows = rows.map do |row|
      "  " << row.each_with_index.map { |cell, index| cell.to_s.ljust(max_cell_sizes[index]) }.join(" | ")
    end

    separator = "-" * (rows.map &:size).max

    rows.insert(1, separator).join "\n"
  end
end



class ExtraLoopCommand < Thor
  register(DataStoreCommand, "datastore", "datastore <command>", "CLI interface to the ExtraLoop Redis Datastore")
end

ExtraLoopCommand.start
